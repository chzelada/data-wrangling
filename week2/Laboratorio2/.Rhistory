##EJERCICIO 8
h <- dbGetQuery(mydb,"select count(*) from heroes_information where `Eye color` = 'blue' or `Eye color` = 'red'")
h
##EJERCICIO 9
i <- dbGetQuery(mydb,"select count(*) from heroes_information where weight between 100 and 200")
i
##EJERCICIO10
j <- dbGetQuery(mydb,"select name, weight, height from heroes_information where weight>200 and height>100 order by height desc")
j
k <- dbGetQuery(mydb,"select name, race from heroes_information order by name,race")
k
##EJERCICIO11
ejercicio11 <- dbGetQuery(mydb,"select publisher, gender,count(*) as cuenta from heroes_information where gender='female' group by publisher order by cuenta desc ")
ejercicio11
##EJERCICIO12
l <- dbGetQuery(mydb,"select publisher, alignment,race, count(*) as cuenta from heroes_information where alignment='good' group by publisher having count(publisher)>30 ")
l
mydb = dbConnect(MySQL(),host=connection_name,dbname=db_name,user=user,pass=password)
dbListTables(mydb)
mydb = dbConnect(drv,host=connection_name,dbname=db_name,user=user,pass=password)
a <- dbGetQuery(mydb,"select name, Publisher  from heroes_information")
##EJERCICIO 2
b <- dbGetQuery(mydb,"select distinct Publisher  from heroes_information")
##EJERCICIO 3
c <- dbGetQuery(mydb,"select count(distinct Publisher)  from heroes_information")
##EJERCICIO 4 y 5
e <- dbGetQuery(mydb,"select *  from heroes_information where height>200")
##EJERCICIO 6
f <- dbGetQuery(mydb,"select *  from heroes_information where height>200 and race='Human'")
##EJERCICIO 7
g <- dbGetQuery(mydb,"select count(*)  from heroes_information where weight>100 and weight<200")
##EJERCICIO 8
h <- dbGetQuery(mydb,"select count(*) from heroes_information where `Eye color` = 'blue' or `Eye color` = 'red'")
h
##EJERCICIO 9
i <- dbGetQuery(mydb,"select count(*) from heroes_information where weight between 100 and 200")
i
##EJERCICIO10
j <- dbGetQuery(mydb,"select name, weight, height from heroes_information where weight>200 and height>100 order by height desc")
j
k <- dbGetQuery(mydb,"select name, race from heroes_information order by name,race")
k
##EJERCICIO11
ejercicio11 <- dbGetQuery(mydb,"select publisher, gender,count(*) as cuenta from heroes_information where gender='female' group by publisher order by cuenta desc ")
ejercicio11
##EJERCICIO12
l <- dbGetQuery(mydb,"select publisher, alignment,race, count(*) as cuenta from heroes_information where alignment='good' group by publisher having count(publisher)>30 ")
l
revision(a,b,c,d,e,f,g,h,i,j,k,l)
##EJERCICIO 4 y 5
d <- dbGetQuery(mydb,"select *  from heroes_information where height>200")
revision(a,b,c,d,e,f,g,h,i,j,k,l)
l %>% head()
dbDisconnect(mydb)
dbListConnections()
dbListConnections(mydb)
dbListConnections()
dbListConnections(MySQL())
dbListConnections(MySQL()[1])
dbListConnections(MySQL())[1]
dbDisconnect(dbListConnections(MySQL())[1])
dbDisconnect(dbListConnections(MySQL())[con])
dbDisconnect(dbListConnections(MySQL()))
killDbConnections <- function () {
all_cons <- dbListConnections(MySQL())
print(all_cons)
for(con in all_cons)
+  dbDisconnect(con)
print(paste(length(all_cons), " connections killed."))
}
killDbConnections()
dbListConnections(MySQL())[1]
dbListConnections(MySQL())[[1]]
mydb = dbConnect(drv,host=connection_name,dbname=db_name,user=user,pass=password)
Query <- "SELECT  Name,Publisher FROM heroes_information;"
a <- dbGetQuery(mydb, Query)
#2
Query <- "SELECT DISTINCT publisher FROM heroes_information;"
b <- dbGetQuery(mydb, Query)
Query <- "SELECT COUNT(publisher) FROM heroes_information;"
hero <- dbGetQuery(mydb, Query)
#3
Query <- "SELECT COUNT(DISTINCT publisher) FROM heroes_information;"
c <- dbGetQuery(mydb, Query)
#wHERE =  <>NOT EQUAL  <  >  <=  >=
Query <- "SELECT PUblisher FROM heroes_information WHERE PUblisher='DC Comics';"
hero <- dbGetQuery(mydb, Query)
#4
Query <- "SELECT * FROM heroes_information WHERE Height>200;"
d <- dbGetQuery(mydb, Query)
#5
Query <- "SELECT * FROM heroes_information WHERE Race='Human';"
e <- dbGetQuery(mydb, Query)
# Where field=x AND field2=y
head(heroin)
#6 y 7
Query <- "SELECT * FROM heroes_information WHERE Race='Human' AND Height>200 ;"
f <- dbGetQuery(mydb, Query)
Query <- "SELECT * FROM heroes_information WHERE Weight>100 AND Weight<200 ;"
g <- dbGetQuery(mydb, Query)
#Where and or    where (x or y) AND (x or y)
#8
Query <- "SELECT COUNT(name) FROM heroes_information WHERE `EYE color`='blue' OR `EYE color`='red' ;"
h <- dbGetQuery(mydb, Query)
#Between -  IN Where x BETWEEN 1 AND 5;    WHERE X IN (2,4,5);    BETWEEN es inclusivo, en R se usa %IN%
#9
Query <- "SELECT COUNT(name) FROM heroes_information WHERE Weight BETWEEN 100 AND 200 ;"
i <- dbGetQuery(mydb, Query)
#Order by  from table order by x,y; (ascendente default)   from table order by x DESC;
# 10 y 11
Query <- "SELECT name,Weight,Height FROM heroes_information WHERE Weight>200 AND Height>100 ORDER BY Height DESC;"
j <- dbGetQuery(mydb, Query)
Query <- "SELECT name,Race FROM heroes_information ORDER BY Name, Race;"
k <- dbGetQuery(mydb, Query)
#group by SELECT fields COUNT(*) FROM table GROUP BY field HAVING COUNT(field)>100;
# 12
Query <- "SELECT Publisher,Alignment,Race, COUNT(name) FROM heroes_information WHERE Alignment='good' GROUP BY Publisher HAVING COUNT(Publisher)>30;"
l <- dbGetQuery(mydb, Query)
revision(a,b,c,d,e,f,g,h,i,j,k,l)
revision(a,b,c,d,e,f,g,h,i,j,k,l,mydb)
killDbConnections <- function () {
all_cons <- dbListConnections(MySQL())
print(all_cons)
for(con in all_cons)
+  dbDisconnect(con)
print(paste(length(all_cons), " connections killed."))
}
connection_name <- "dstrackdb.cwvcmlr71hlu.us-east-1.rds.amazonaws.com"
db_name <- "data_wrangling"
user <- "dstrack"
password <- "4es-27c-CdV-TEe"
drv = dbDriver("MySQL")
mydb = dbConnect(drv,host=connection_name,dbname=db_name,user=user,pass=password)
revision <- function(q1,q2,q3,q4,q5,q6,q7,q8,q9,q10,q11,q12,mydb){
if(is.null(q1)==FALSE && nrow(q1)==734 && names(q1)[1]=="name" && names(q1)[2]%in%c("Publisher", "publisher")){print("Query 1: APPROVED ")} else {print("Query 1: FAILED (a)")}
if(is.null(q2)==FALSE && nrow(q2)==25){print("Query 2: APPROVED")} else {print("Query 2: FAILED (b)")}
if(is.null(q3)==FALSE && q3==25){print("Query 3: APPROVED")} else {print("Query 3: FAILED (c)")}
if(is.null(q4)==FALSE && nrow(q4)==59 && q4$Weight>200){print("Query 4: APPROVED")} else {print("Query 4: FAILED (d)")}
if(is.null(q5)==FALSE && nrow(q5)==208 && q5$Race=="Human"){print("Query 5: APPROVED")} else {print("Query 5: FAILED (e)")}
if(is.null(q6)==FALSE && nrow(q6)==12 && q6$Weight>200 && q6$Race=="Human"){print("Query 6: APPROVED")} else {print("Query 6: FAILED (f)")}
if(is.null(q7)==FALSE && q7==98){print("Query 7: APPROVED")} else {print("Query 7: FAILED (g)")}
if(is.null(q8)==FALSE && q8==271){
print("Query 8: APPROVED")} else {
print("Query 8: FAILED (h)")}
if(is.null(q9)==FALSE && q9==98){print("Query 9: APPROVED")} else {print("Query 9: FAILED (i)")}
if(is.null(q10)==FALSE && names(q10)[1]=="name" && names(q10)[2]%in%c("Weight", "weight") && names(q10)[3]%in%c("Height", "height") && nrow(q10)==50 && (q10$height[1]==max(q10$height)||q10$Height[1]==max(q10$Height))){
print("Query 10: APPROVED")} else {
print("Query 10: FAILED (j)")}
if(is.null(q11)==FALSE && names(q11)[1]=="name" && names(q11)[2]%in%c("Race", "race") && nrow(q11)==734 && q11$name[1]==min(q11$name)){
print("Query 11: APPROVED")} else {
print("Query 11: FAILED (k)")}
if(is.null(q12)==FALSE && nrow(q12)==2 && q12$`COUNT(name)`[1]==142 && q12$`COUNT(name)`[2]==259){
print("Query 12: APPROVED")} else {
print("Query 12: FAILED (l)")}
dbDisconnect(mydb)
}
#Ejercicio 1
Query <- "SELECT name, Publisher FROM heroes_information;"
a <- dbGetQuery(mydb, Query)
#Ejercicio 2
Query <- "SELECT DISTINCT Publisher FROM heroes_information;"
b <- dbGetQuery(mydb, Query)
#Ejercicio 3
Query <- "SELECT COUNT(DISTINCT Publisher) FROM heroes_information;"
c <- dbGetQuery(mydb, Query)
#Ejercicio 4 y 5
Query <- "SELECT * FROM heroes_information WHERE Height>200;"
d <- dbGetQuery(mydb, Query)
#Ejercicio 6 y 7
Query <- "SELECT * FROM heroes_information WHERE Race='Human' AND Height>200;"
e <- dbGetQuery(mydb, Query)
Query <- "SELECT COUNT(*) FROM heroes_information WHERE Weight>100 AND Weight<200;"
f <- dbGetQuery(mydb, Query)
#Ejercicio 8
Query <- "SELECT COUNT(*) FROM heroes_information WHERE `Eye color`='blue' OR `Eye color`='red';"
g <- dbGetQuery(mydb, Query)
#Ejercicio 9
Query <- "SELECT COUNT(*) FROM heroes_information WHERE Weight BETWEEN 100 AND 200;"
h <- dbGetQuery(mydb, Query)
#Ejercicio 10
Query <- "SELECT name, Weight, Height FROM heroes_information WHERE Weight>200 AND Height>100 ORDER BY Height DESC;"
i <- dbGetQuery(mydb, Query)
Query <- "SELECT name, race FROM heroes_information ORDER BY name, race;"
j <- dbGetQuery(mydb, Query)
#Ejercicio 11
k <- "SELECT COUNT(gender='female'), Publisher, gender FROM heroes_information GROUP BY Publisher ORDER BY COUNT(gender='female');"
#Ejercicio 12 GROUP BY / HAVING 'COUNT()'
l <- "SELECT COUNT(name), Publisher, Alignment, race FROM heroes_information WHERE Alignment='good' GROUP BY   Publisher HAVING COUNT(Publisher) > 30;"
revision(a,b,c,d,e,f,g,h,i,j,k,l,mydb)
revision <- function(q1,q2,q3,q4,q5,q6,q7,q8,q9,q10,q11,q12,mydb){
if(is.null(q1)==FALSE && nrow(q1)==734 && names(q1)[1]=="name" && names(q1)[2]%in%c("Publisher", "publisher")){print("Query 1: APPROVED ")} else {print("Query 1: FAILED (a)")}
if(is.null(q2)==FALSE && nrow(q2)==25){print("Query 2: APPROVED")} else {print("Query 2: FAILED (b)")}
if(is.null(q3)==FALSE && q3==25){print("Query 3: APPROVED")} else {print("Query 3: FAILED (c)")}
if(is.null(q4)==FALSE && nrow(q4)==59 && q4$Weight>200){print("Query 4: APPROVED")} else {print("Query 4: FAILED (d)")}
if(is.null(q5)==FALSE && nrow(q5)==208 && q5$Race=="Human"){print("Query 5: APPROVED")} else {print("Query 5: FAILED (e)")}
if(is.null(q6)==FALSE && nrow(q6)==12 && q6$Height>200 && q6$Race=="Human"){print("Query 6: APPROVED")} else {print("Query 6: FAILED (f)")}
if(is.null(q7)==FALSE && q7==98){print("Query 7: APPROVED")} else {print("Query 7: FAILED (g)")}
if(is.null(q8)==FALSE && q8==271){
print("Query 8: APPROVED")} else {
print("Query 8: FAILED (h)")}
if(is.null(q9)==FALSE && q9==98){print("Query 9: APPROVED")} else {print("Query 9: FAILED (i)")}
if(is.null(q10)==FALSE && names(q10)[1]=="name" && names(q10)[2]%in%c("Weight", "weight") && names(q10)[3]%in%c("Height", "height") && nrow(q10)==50 && (q10$height[1]==max(q10$height)||q10$Height[1]==max(q10$Height))){
print("Query 10: APPROVED")} else {
print("Query 10: FAILED (j)")}
if(is.null(q11)==FALSE && names(q11)[1]=="name" && names(q11)[2]%in%c("Race", "race") && nrow(q11)==734 && q11$name[1]==min(q11$name)){
print("Query 11: APPROVED")} else {
print("Query 11: FAILED (k)")}
if(is.null(q12)==FALSE && nrow(q12)==2 && q12$`COUNT(name)`[1]==142 && q12$`COUNT(name)`[2]==259){
print("Query 12: APPROVED")} else {
print("Query 12: FAILED (l)")}
dbDisconnect(mydb)
}
revision(a,b,c,d,e,f,g,h,i,j,k,l,mydb)
#Ejercicio 1
Query <- "SELECT name, Publisher FROM heroes_information;"
a <- dbGetQuery(mydb, Query)
#Ejercicio 2
Query <- "SELECT DISTINCT Publisher FROM heroes_information;"
b <- dbGetQuery(mydb, Query)
#Ejercicio 3
Query <- "SELECT COUNT(DISTINCT Publisher) FROM heroes_information;"
c <- dbGetQuery(mydb, Query)
#Ejercicio 4 y 5
Query <- "SELECT * FROM heroes_information WHERE Height>200;"
d <- dbGetQuery(mydb, Query)
#Ejercicio 6 y 7
Query <- "SELECT * FROM heroes_information WHERE Race='Human' AND Height>200;"
f <- dbGetQuery(mydb, Query)
Query <- "SELECT COUNT(*) FROM heroes_information WHERE Weight>100 AND Weight<200;"
g <- dbGetQuery(mydb, Query)
#Ejercicio 8
Query <- "SELECT COUNT(*) FROM heroes_information WHERE `Eye color`='blue' OR `Eye color`='red';"
h <- dbGetQuery(mydb, Query)
#Ejercicio 9
Query <- "SELECT COUNT(*) FROM heroes_information WHERE Weight BETWEEN 100 AND 200;"
i <- dbGetQuery(mydb, Query)
#Ejercicio 10
Query <- "SELECT name, Weight, Height FROM heroes_information WHERE Weight>200 AND Height>100 ORDER BY Height DESC;"
j <- dbGetQuery(mydb, Query)
Query <- "SELECT name, race FROM heroes_information ORDER BY name, race;"
k <- dbGetQuery(mydb, Query)
#Ejercicio 11
query <- "SELECT COUNT(gender='female'), Publisher, gender FROM heroes_information GROUP BY Publisher ORDER BY COUNT(gender='female');"
#Ejercicio 12 GROUP BY / HAVING 'COUNT()'
l <- "SELECT COUNT(name), Publisher, Alignment, race FROM heroes_information WHERE Alignment='good' GROUP BY   Publisher HAVING COUNT(Publisher) > 30;"
revision(a,b,c,d,e,f,g,h,i,j,k,l,mydb)
head(k)
if(is.null(k)==FALSE && names(k)[1]=="name" && names(k)[2]%in%c("Race", "race") && nrow(k)==734 && k$name[1]==min(k$name)){
print("Query 11: APPROVED")} else {
print("Query 11: FAILED (k)")}
l
#Ejercicio 12 GROUP BY / HAVING 'COUNT()'
Query <- "SELECT COUNT(name), Publisher, Alignment, race FROM heroes_information WHERE Alignment='good' GROUP BY   Publisher HAVING COUNT(Publisher) > 30;"
l <- dbGetQuery(mydb, Query)
revision(a,b,c,d,e,f,g,h,i,j,k,l,mydb)
uno <- Dos <- "select name.publisher From heroes_information;"
a <- dbGetQuery(mydb, Uno)
Dos <- "select DISTINCT publisher From heroes_information;"
b <- dbGetQuery(mydb, Dos)
hero
tres <- "select COUNT(DISTINCT publisher) From heroes_information;"
c <- dbGetQuery(mydb, tres)
cuatro <- "select * From heroes_information where Height > 200;"
d <- dbGetQuery(mydb, cuatro)
hero
Cinco <- "select * From heroes_information where Race = 'Human';"
e <- dbGetQuery(mydb, Cinco)
hero
Seis <- "select * From heroes_information where Race = 'Human'  and Height > 200;"
f <- dbGetQuery(mydb, Seis)
hero
Siete <- "select * From heroes_information where Weight > 100 and Weight < 200;"
g <- dbGetQuery(mydb, Seis)
hero
Ocho <- "select count(name) From heroes_information where `EYE color` = 'blue' or `EYE color` = 'red';"
h <- dbGetQuery(mydb, Ocho)
hero
diez <- "select name, Weight, Height From heroes_information where Weight > 200 and Height > 100 order by Height DESC;"
j <- dbGetQuery(mydb, Nueve)
hero
once <- "select name, Race From heroes_information order by name, race;"
k <- dbGetQuery(mydb, diez)
hero
doce <- "select Publisher, Alignment, Race, Count(name) From heroes_information where Alignment =  'good'
group by Publisher HAVING COUNT(Publisher) > 30 ;"
l <- dbGetQuery(mydb, Once)
mydb = dbConnect(drv,host=connection_name,dbname=db_name,user=user,pass=password)
uno <- Dos <- "select name.publisher From heroes_information;"
a <- dbGetQuery(mydb, Uno)
Dos <- "select DISTINCT publisher From heroes_information;"
b <- dbGetQuery(mydb, Dos)
hero
tres <- "select COUNT(DISTINCT publisher) From heroes_information;"
c <- dbGetQuery(mydb, tres)
cuatro <- "select * From heroes_information where Height > 200;"
d <- dbGetQuery(mydb, cuatro)
hero
Cinco <- "select * From heroes_information where Race = 'Human';"
e <- dbGetQuery(mydb, Cinco)
hero
Seis <- "select * From heroes_information where Race = 'Human'  and Height > 200;"
f <- dbGetQuery(mydb, Seis)
hero
Siete <- "select * From heroes_information where Weight > 100 and Weight < 200;"
g <- dbGetQuery(mydb, Seis)
hero
Ocho <- "select count(name) From heroes_information where `EYE color` = 'blue' or `EYE color` = 'red';"
h <- dbGetQuery(mydb, Ocho)
hero
diez <- "select name, Weight, Height From heroes_information where Weight > 200 and Height > 100 order by Height DESC;"
j <- dbGetQuery(mydb, Nueve)
hero
once <- "select name, Race From heroes_information order by name, race;"
k <- dbGetQuery(mydb, diez)
hero
doce <- "select Publisher, Alignment, Race, Count(name) From heroes_information where Alignment =  'good'
group by Publisher HAVING COUNT(Publisher) > 30 ;"
l <- dbGetQuery(mydb, Once)
once <- "select name, Race From heroes_information order by name, race;"
k <- dbGetQuery(mydb, once)
doce <- "select Publisher, Alignment, Race, Count(name) From heroes_information where Alignment =  'good'
group by Publisher HAVING COUNT(Publisher) > 30 ;"
l <- dbGetQuery(mydb, doce)
revision(a,b,c,d,e,f,g,h,i,j,k,l)
l
doce <- "select Publisher, Alignment, Race, COUNT(name) From heroes_information where Alignment =  'good'
group by Publisher HAVING COUNT(Publisher) > 30 ;"
l <- dbGetQuery(mydb, doce)
revision(a,b,c,d,e,f,g,h,i,j,k,l)
revision(a,b,c,d,e,f,g,h,i,j,k,l,mydb)
connection_name <- "dstrackdb.cwvcmlr71hlu.us-east-1.rds.amazonaws.com"
db_name <- "data_wrangling"
user <- "dstrack"
password <- "4es-27c-CdV-TEe"
drv = dbDriver("MySQL")
mydb = dbConnect(drv,host=connection_name,dbname=db_name,user=user,pass=password)
revision <- function(q1,q2,q3,q4,q5,q6,q7,q8,q9,q10,q11,q12,mydb){
if(is.null(q1)==FALSE && nrow(q1)==734 && names(q1)[1]=="name" && names(q1)[2]%in%c("Publisher", "publisher")){print("Query 1: APPROVED ")} else {print("Query 1: FAILED (a)")}
if(is.null(q2)==FALSE && nrow(q2)==25){print("Query 2: APPROVED")} else {print("Query 2: FAILED (b)")}
if(is.null(q3)==FALSE && q3==25){print("Query 3: APPROVED")} else {print("Query 3: FAILED (c)")}
if(is.null(q4)==FALSE && nrow(q4)==59 && q4$Weight>200){print("Query 4: APPROVED")} else {print("Query 4: FAILED (d)")}
if(is.null(q5)==FALSE && nrow(q5)==208 && q5$Race=="Human"){print("Query 5: APPROVED")} else {print("Query 5: FAILED (e)")}
if(is.null(q6)==FALSE && nrow(q6)==12 && q6$Height>200 && q6$Race=="Human"){print("Query 6: APPROVED")} else {print("Query 6: FAILED (f)")}
if(is.null(q7)==FALSE && q7==98){print("Query 7: APPROVED")} else {print("Query 7: FAILED (g)")}
if(is.null(q8)==FALSE && q8==271){
print("Query 8: APPROVED")} else {
print("Query 8: FAILED (h)")}
if(is.null(q9)==FALSE && q9==98){print("Query 9: APPROVED")} else {print("Query 9: FAILED (i)")}
if(is.null(q10)==FALSE && names(q10)[1]=="name" && names(q10)[2]%in%c("Weight", "weight") && names(q10)[3]%in%c("Height", "height") && nrow(q10)==50 && (q10$height[1]==max(q10$height)||q10$Height[1]==max(q10$Height))){
print("Query 10: APPROVED")} else {
print("Query 10: FAILED (j)")}
if(is.null(q11)==FALSE && names(q11)[1]=="name" && names(q11)[2]%in%c("Race", "race") && nrow(q11)==734 && q11$name[1]==min(q11$name)){
print("Query 11: APPROVED")} else {
print("Query 11: FAILED (k)")}
if(is.null(q12)==FALSE && nrow(q12)==2 && q12$`COUNT(name)`[1]==142 && q12$`COUNT(name)`[2]==259){
print("Query 12: APPROVED")} else {
print("Query 12: FAILED (l)")}
dbDisconnect(mydb)
}
# Query 1
query <- "SELECT name, Publisher  FROM heroes_information ;"
a <- dbGetQuery(mydb, query)
# Query 8
query <- "SELECT *  FROM heroes_information WHERE (`Eye color` = 'blue') OR (`Eye color` = 'red');"
h <- dbGetQuery(mydb, query)
revision(q1 = a, q8 = h, mydb = mydb)
revision(q8 = h, mydb = mydb)
revision <- function(q1=NULL,q2=NULL,q3=NULL,q4=NULL,q5=NULL,q6=NULL,q7=NULL,q8=NULL,q9=NULL,q10=NULL,q11=NULL,q12=NULL,mydb=NULL){
if(is.null(q1)==FALSE && nrow(q1)==734 && names(q1)[1]=="name" && names(q1)[2]%in%c("Publisher", "publisher")){print("Query 1: APPROVED ")} else {print("Query 1: FAILED (a)")}
if(is.null(q2)==FALSE && nrow(q2)==25){print("Query 2: APPROVED")} else {print("Query 2: FAILED (b)")}
if(is.null(q3)==FALSE && q3==25){print("Query 3: APPROVED")} else {print("Query 3: FAILED (c)")}
if(is.null(q4)==FALSE && nrow(q4)==59 && q4$Weight>200){print("Query 4: APPROVED")} else {print("Query 4: FAILED (d)")}
if(is.null(q5)==FALSE && nrow(q5)==208 && q5$Race=="Human"){print("Query 5: APPROVED")} else {print("Query 5: FAILED (e)")}
if(is.null(q6)==FALSE && nrow(q6)==12 && q6$Height>200 && q6$Race=="Human"){print("Query 6: APPROVED")} else {print("Query 6: FAILED (f)")}
if(is.null(q7)==FALSE && q7==98){print("Query 7: APPROVED")} else {print("Query 7: FAILED (g)")}
if(is.null(q8)==FALSE && q8==271){
print("Query 8: APPROVED")} else {
print("Query 8: FAILED (h)")}
if(is.null(q9)==FALSE && q9==98){print("Query 9: APPROVED")} else {print("Query 9: FAILED (i)")}
if(is.null(q10)==FALSE && names(q10)[1]=="name" && names(q10)[2]%in%c("Weight", "weight") && names(q10)[3]%in%c("Height", "height") && nrow(q10)==50 && (q10$height[1]==max(q10$height)||q10$Height[1]==max(q10$Height))){
print("Query 10: APPROVED")} else {
print("Query 10: FAILED (j)")}
if(is.null(q11)==FALSE && names(q11)[1]=="name" && names(q11)[2]%in%c("Race", "race") && nrow(q11)==734 && q11$name[1]==min(q11$name)){
print("Query 11: APPROVED")} else {
print("Query 11: FAILED (k)")}
if(is.null(q12)==FALSE && nrow(q12)==2 && q12$`COUNT(name)`[1]==142 && q12$`COUNT(name)`[2]==259){
print("Query 12: APPROVED")} else {
print("Query 12: FAILED (l)")}
dbDisconnect(mydb)
}
revision(q1 = a, q8 = h, mydb = mydb)
head(h)
connection_name <- "dstrackdb.cwvcmlr71hlu.us-east-1.rds.amazonaws.com"
db_name <- "data_wrangling"
user <- "dstrack"
password <- "4es-27c-CdV-TEe"
drv = dbDriver("MySQL")
mydb = dbConnect(drv,host=connection_name,dbname=db_name,user=user,pass=password)
revision <- function(q1=NULL,q2=NULL,q3=NULL,q4=NULL,q5=NULL,q6=NULL,q7=NULL,q8=NULL,q9=NULL,q10=NULL,q11=NULL,q12=NULL,mydb=NULL){
if(is.null(q1)==FALSE && nrow(q1)==734 && names(q1)[1]=="name" && names(q1)[2]%in%c("Publisher", "publisher")){print("Query 1: APPROVED ")} else {print("Query 1: FAILED (a)")}
if(is.null(q2)==FALSE && nrow(q2)==25){print("Query 2: APPROVED")} else {print("Query 2: FAILED (b)")}
if(is.null(q3)==FALSE && q3==25){print("Query 3: APPROVED")} else {print("Query 3: FAILED (c)")}
if(is.null(q4)==FALSE && nrow(q4)==59 && q4$Weight>200){print("Query 4: APPROVED")} else {print("Query 4: FAILED (d)")}
if(is.null(q5)==FALSE && nrow(q5)==208 && q5$Race=="Human"){print("Query 5: APPROVED")} else {print("Query 5: FAILED (e)")}
if(is.null(q6)==FALSE && nrow(q6)==12 && q6$Height>200 && q6$Race=="Human"){print("Query 6: APPROVED")} else {print("Query 6: FAILED (f)")}
if(is.null(q7)==FALSE && q7==98){print("Query 7: APPROVED")} else {print("Query 7: FAILED (g)")}
if(is.null(q8)==FALSE && q8==271){
print("Query 8: APPROVED")} else {
print("Query 8: FAILED (h)")}
if(is.null(q9)==FALSE && q9==98){print("Query 9: APPROVED")} else {print("Query 9: FAILED (i)")}
if(is.null(q10)==FALSE && names(q10)[1]=="name" && names(q10)[2]%in%c("Weight", "weight") && names(q10)[3]%in%c("Height", "height") && nrow(q10)==50 && (q10$height[1]==max(q10$height)||q10$Height[1]==max(q10$Height))){
print("Query 10: APPROVED")} else {
print("Query 10: FAILED (j)")}
if(is.null(q11)==FALSE && names(q11)[1]=="name" && names(q11)[2]%in%c("Race", "race") && nrow(q11)==734 && q11$name[1]==min(q11$name)){
print("Query 11: APPROVED")} else {
print("Query 11: FAILED (k)")}
if(is.null(q12)==FALSE && nrow(q12)==2 && q12$`COUNT(name)`[1]==142 && q12$`COUNT(name)`[2]==259){
print("Query 12: APPROVED")} else {
print("Query 12: FAILED (l)")}
dbDisconnect(mydb)
}
a <- dbGetQuery(mydb, query)
hero
# Ej 2
query <- "SELECT DISTINCT Publisher
FROM heroes_information;"
b <- dbGetQuery(mydb, query)
hero
# Ej 3
query <- "SELECT COUNT(DISTINCT Publisher)
FROM heroes_information;"
c <- dbGetQuery(mydb, query)
hero
# Ej 4
query <- "SELECT *
FROM heroes_information
WHERE Height > 200;"
d <- dbGetQuery(mydb, query)
hero
# Ej 5
query <- "SELECT *
FROM heroes_information
WHERE Race = 'Human;"
e <- dbGetQuery(mydb, query)
hero
# Ej 6
query <- "SELECT *
FROM heroes_information
WHERE Race = 'Human'
AND Height > 200;"
f <- dbGetQuery(mydb, query)
f
# Ej 7
query <- "SELECT COUNT(*)
FROM heroes_information
WHERE Weight < 200
AND Weight > 100;"
g <- dbGetQuery(mydb, query)
hero
# Ej 8
eyes <- "Eye color"
query <- "SELECT COUNT(*)
FROM heroes_information
WHERE `Eye color` = 'blue' OR `Eye color` = 'red';"
h <- dbGetQuery(mydb, query)
hero
# Ej 9
eyes <- "Eye color"
query <- "SELECT COUNT(*)
FROM heroes_information
WHERE Weight BETWEEN 100 AND 200"
i <- dbGetQuery(mydb, query)
hero
query <- "SELECT COUNT(*)
FROM heroes_information
WHERE Weight IN (1, 2, 3, 4, 5)"
hero <- dbGetQuery(mydb, query)
hero
# Ej 10
query <- "SELECT name, Weight, Height
FROM heroes_information
WHERE Weight > 200 AND Height > 100
ORDER BY Height DESC"
j <- dbGetQuery(mydb, query)
hero
# Ej 11
query <- "SELECT name, Race
FROM heroes_information
ORDER BY name, Race"
k <- dbGetQuery(mydb, query)
hero
# Ej 12
query <- "SELECT Name, Publisher, Alignment, Race
FROM heroes_information
WHERE Alignment = 'good'
GROUP BY Publisher
HAVING COUNT(Publisher) > 30;"
l <- dbGetQuery(mydb, query)
revision(a,b,c,d,e,f,g,h,i,j,k,l,mydb)
query <- "SELECT DISTINCT name, Publisher
FROM heroes_information;"
a <- dbGetQuery(mydb, query)
hero
revision(a,b,c,d,e,f,g,h,i,j,k,l,mydb)
query <- "SELECT *
FROM heroes_information
WHERE Race = 'Human;"
e <- dbGetQuery(mydb, query)
revision(a,b,c,d,q6 = f,q7=g,q8=h,q9=i,q10=j,q11=k,q12=l,mydb)
revision(a,b,c,d,q6 = f,q7=g,q8=h,q9=i,q10=j,q11=k,q12=l,mydb=mydb)
l
e
