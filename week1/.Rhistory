select(message,sent_count) %>%
group_by(message) %>%
summarise(n=sum(sent_count)) %>%
mutate(pct=n/sum(n)) %>%
arrange(desc(n)) %>%
distinct()
head(u)
mean(scheduler$total_recipients)
sd(scheduler$total_recipients)
qplot(scheduler$total_recipients, geom="histogram", binwidth=1)
qplot(scheduler$total_recipients, geom="histogram", binwidth=10)
qplot(scheduler$total_recipients, geom="histogram", binwidth=100)
scheduler$total_recipients %>% sd()
scheduler$total_recipients %>% max()
scheduler$total_recipients %>% sd()
qplot(scheduler$total_recipients, geom="histogram", binwidth=1000)
qplot(scheduler$total_recipients, geom="histogram", binwidth=10)
)
mean(scheduler$total_recipients)
sd(scheduler$total_recipients)
scheduler$total_recipients %>% sd()
mean(clean$total_recipients)
u<-scheduler %>%
select(message,sent_count) %>%
group_by(message) %>%
summarise(n=sum(sent_count)) %>%
mutate(pct=n/sum(n)) %>%
arrange(desc(n)) %>%
distinct()
library(dplyr)
names(df)
summary(message_mode)
summary(df$message_mode)
df %>% names()
summarise(df$sent_from)
summary(df$sent_from)
View() %>%summary(df$sent_from)
View(summary(df$sent_from))
mode_sc <- scheduler %>%
select(message_mode,sent_count) %>%
group_by(message_mode) %>%
summarise(n=sum(sent_count)) %>%
mutate(pct=n/sum(n)) %>%
arrange(desc(n))
mode_sc
u
mode_web
mode_sc <- scheduler %>%
select(message_mode,sent_count) %>%
group_by(message_mode) %>%
summarise(n=sum(sent_count)) %>%
mutate(pct=n/sum(n)) %>%
arrange(desc(n))
mode_sc
arimany<-df %>%  filter(!grepl("ARIMANY", message))
arimany<-df %>% filter(!str_detect(message,"^ARIMANY"))
###########################LONTAILS
library(stringr)
arimany<-df %>% filter(!str_detect(message,"^ARIMANY"))
arimany<-df %>% filter(str_detect(message,"^ARIMANY"))
arimany
sum(arimany$sent_from)
sum(arimany$sent_count)
arimany<-df %>%  filter(!grepl("^ARIMANY", message))
head(arimany)
arimany<-df %>% filter(str_detect(message,"^ARIMANY"))
sum(arimany$sent_count)
plot(density(arimany$sent_count))
hist(arimany$sent_count)
ggplot(data = arimany, aes(x=message, y=sent_count)) +geom_density2d()
library(ggplot2)
ggplot(data = arimany, aes(x=message, y=sent_count)) +geom_density2d()
ggplot(data = arimany, aes(x=message, y=sent_count)) +geom_area()
ggplot(data = arimany, aes(x=message, y=sent_count)) +geom_bar()
ggplot(data = arimany, aes(x=message)) +geom_bar()
ggplot(data = arimany, aes(x=message,y=sent_count)) +geom_line()
ggplot(data = arimany, aes(x=message,y=sent_count)) +geom_point()
ggplot(data = arimany, aes(x=message,y=sent_count)) +geom_point() %>% arrange(desc(sent_count))
ggplot(data = arimany, aes(y=sent_count)) +geom_point()
ggplot(data = arimany, aes(x=message,y=sent_count)) +geom_point()
ggplot(data = arimany, aes(x=message,y=sent_count)) +geom_area()
ggplot(data = arimany, aes(x=message,y=sent_count)) +geom_count()
ggplot(data = arimany, aes(x=message,y=sent_count)) +geom_polygon()
ggplot(data = arimany, aes(x=message,y=sent_count)) +geom_bar()
ggplot(data = arimany, aes(x=message,y=sent_count)) +geom_hist()
ggplot(data = arimany, aes(x=message,y=sent_count)) +geom_point()
ggplot(data = arimany, aes(x=message,y=sent_count)) +geom_point() + abline()
ggplot(data = arimany, aes(x=message,y=sent_count)) +geom_point() + line()
ggplot(data = arimany, aes(x=message,y=sent_count)) +geom_point() + line(x=sent_count)
ggplot(data = arimany, aes(x=message,y=sent_count)) +geom_point() + line(x=arimany$sent_count)
ggplot(data = arimany, aes(x=message,y=sent_count)) +geom_point() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=message,y=sent_count)) +geom_histogram() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(,y=sent_count)) +geom_bar()
ggplot(data = arimany, aes(x=message,y=sent_count)) +geom_bar() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=message,y=sent_count)) +geom_point() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=message,y=sent_count)) +geom_bar(stat = "identity") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) +geom_bar(stat = "identity") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) +geom_bar(stat = "identity")
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) +geom_point(stat = "identity") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) +geom_point(stat = "identity") + geom_line()
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) +geom_point(stat = "identity") + geom_line()
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) +geom_point() + geom_line()
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) +geom_point() + geom_line()
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count))  + geom_line()
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) +geom_point() + geom_line()
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) +geom_point() + geom_area()
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) +geom_point() + geom_bar()
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) +geom_point() + geom_contour()
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) +geom_point() + geom_curve()
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) +geom_point() + geom_density()
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) +geom_point() + geom_smooth()
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) +geom_point() + geom_smooth()
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) +geom_point() + geom_smooth()
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) +geom_point()
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + geom_smooth()
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) +geom_point()
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) +geom_point()
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) +geom_point() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) +geom_point() + geom_smooth() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) +geom_point() + geom_abline()
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) +geom_point() + geom_abline()
+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) +geom_point() + geom_line()
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) +geom_point() + geom_line()
+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) +geom_point() +
geom_line()+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) +geom_point() +
geom_smooth()+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
arimany$message <- as.factor(arimany$message)
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) +geom_point() +
geom_smooth()+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) +geom_bar()
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) +geom_bar(stat = "identity") +
geom_smooth()+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) +geom_point() +
geom_smooth()+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
arimany$message <- as.factor(arimany$message)
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) +geom_area() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) +geom_bar() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) +geom_curve() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) +geom_path() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) +geom_point +geom_path() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) + geom_point ()
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) + geom_point() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count,group=1)) + geom_point() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count,group=1)) + geom_point() + geom_line()
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count,group=1)) + geom_point() + geom_smooth()
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count,group=1)) + geom_point() + geom_abline()
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count,group=1)) + geom_point() + geom_line()
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count,group=1)) + geom_point() + geom_line()
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count,group=1)) + geom_point() +
geom_line() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count,group=1)) + geom_point() +
geom_line() +
theme(axis.title.x=L,
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count,group=1)) + geom_point() +
geom_line() +
theme(axis.title.x="Longtail Arimany",
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
?theme
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count,group=1)) + geom_point() +
geom_line() +
theme(title = "Longtail Arimany",axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count,group=1)) + geom_point() +
geom_line() +
theme(title =element_text("ar"),axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count,group=1)) +
geom_point() +
geom_line() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count,group=1)) +
geom_point() +
geom_density() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count,group=1)) +
geom_point() +
geom_line() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
geom_point() +
geom_line() +
ggtitle("Arimany Longtail") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count,group=1)) + geom_point() +
geom_line() +
ggtitle("Arimany Longtail") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
longtail <- select(message,sent_count) %>% order(desc(sent_count))
longtail <- select(message,sent_count) %>% group_by(message,sent_count)%>% order(desc(sent_count))
longtail <- arimany %>% select(message,sent_count) %>% group_by(message,sent_count)%>% order(desc(sent_count))
longtail <- arimany %>% select(message,sent_count) %>% group_by(message,sent_count)%>% order(desc(sent_count))
longtail <- arimany %>% select(message,sent_count) %>% group_by(message)%>% order(desc(sent_count))
longtail <- arimany %>% select(message,sent_count)%>% order(desc(sent_count))
names(arimany)
longtail <- arimany %>% select(message,sent_count)%>% order(desc(sent_count))
longtail <- arimany%>% order(desc(sent_count))
longtail <- arimany %>% order(desc(sent_count))
longtail <- arimany %>% order(desc(sent_count))
longtail <- arimany %>% order(desc(arimany$sent_count))
str(arimany$sent_count)
longtail <- arimany %>% select(sent_count) %>% order(desc(arimany$sent_count))
longtail <- as.data.frame(longtail)
arimany
arimany <- as.data.frame(arimany)
longtail <- arimany %>% select(sent_count) %>% order(desc(arimany$sent_count))
longtail
longtail <- arimany %>% select(sent_count) %>% order(asc(arimany$sent_count))
longtail <- arimany %>% select(sent_count) %>% order(desc(arimany$sent_count))
names(arimany)
longtail
str(arimany$sent_count)
longtail <- arimany %>% select(sent_count) %>% mutate(pct =sent_count/sum(sent_count))%>% order(desc(arimany$sent_count))
longtail <- arimany %>% select(message,sent_count) %>% group_by(message) %>% mutate(pct =sent_count/sum(sent_count))%>% order(desc(arimany$sent_count))
longtail <- arimany %>% select(message,sent_count) %>%
group_by(message) %>% mutate(pct =sent_count/sum(sent_count))%>% order(desc(arimany$sent_count))
longtail <- arimany %>%
select(message,sent_count) %>%
group_by(message) %>%
summarise(n=sum(sent_count)) %>%
mutate(pct=n/sum(n)) %>%
arrange(desc(n)) %>%
distinct()
longtail
longtail$pct %>%sum()
longtail %>% View()
longtail$n %>%sum()
arimany$sent_count %>%sum()
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count,group=1)) + geom_point() +
geom_line() +
geom_vline(xintercept = 5) +
ggtitle("Arimany Longtail") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
str(df)
library(lubridate)
library(dplyr)
mes<- df %>% mutate(month_name = month(created_on, label = TRUE))
library(dplyr)
library(dplyr)
mes<- df %>% mutate(month_name = month(created_on, label = TRUE))
library("dplyr", lib.loc="~/R/win-library/3.4")
library(dplyr)
library(lubridate)
library(dplyr)
library("dplyr", lib.loc="~/R/win-library/3.4")
install.packages(dplyr)
install.packages("dplyr")
install.packages("dplyr")
df <- read_csv("C:/Users/jctep/Desktop/Enero2018.csv",
col_names = FALSE, col_types = cols(`30000210` = col_number(),
X10 = col_number()))
###importar archivo csv
library(readr)
require(dplyr)
df <- read_csv("C:/Users/jctep/Desktop/Enero2018.csv",
col_names = FALSE, col_types = cols(`30000210` = col_number(),
X10 = col_number()))
###importar archivo csv
library(readr)
###importar archivo csv
library(readr)
###importar archivo csv
library(readr)
###importar archivo csv
library(readr)
require(dplyr)
###importar archivo csv
install.packages("readr")
library(readr)
library(readr)
df <- read_csv("C:/Users/jctep/Desktop/Enero2018.csv",
col_names = FALSE, col_types = cols(`30000210` = col_number(),
X10 = col_number()))
library(readr)
require(dplyr)
library(ggplot2)
library(readr)
library(Rcpp)
install.packages("Rcpp")
library(readr)
###importar archivo csv
install.packages("readr")
library(readr)
require(dplyr)
install.packages("dplyr")
require(dplyr)
library(lubridate)
df$mes <-mutate(month_name = month(created_on, label = TRUE))
df$mes <-mutate(month_name = month(df$created_on, label = TRUE))
df$mes
df$mes <-mutate(month_name = month(df$created_on, label = TRUE))
?month
df$dia<- mutate(day_name = day(df$created_on, label = TRUE))
df$mes <- month(df$created_on, label=TRUE)
df$dia <- day(df$created_on, label=TRUE)
df$dia <- day(df$created_on)
df$dia
head(g)
g<- df  %>%
select(dia,sent_count,) %>%
group_by(dia) %>%
summarise(n=sum(sent_count)) %>%
mutate(pct=n/sum(n)) %>%
arrange(desc(n)) %>%
distinct()
View(g)
df$hora<- mutate(day_name = hour(df$created_on, label = TRUE))
df$hora<- mutate(day_name = hour(df$created_on))
horas <- df  %>%
select(hora,sent_count,) %>%
group_by(hora) %>%
summarise(n=sum(sent_count)) %>%
mutate(pct=n/sum(n)) %>%
arrange(desc(n)) %>%
distinct()
df$hora<- mutate(day_name = hour(df$created_on))
df$hora <- hour(df$created_on)
head(df$hora)
horas <- df  %>%
select(hora,sent_count,) %>%
group_by(hora) %>%
summarise(n=sum(sent_count)) %>%
mutate(pct=n/sum(n)) %>%
arrange(desc(n)) %>%
distinct()
View(horas)
setwd("~/GitHub/data-wrangling/week1")
df <- read.table("https://s3.amazonaws.com/assets.datacamp.com/blog_assets/test.txt",
header = FALSE)
df
install.packages("xml")
install.packages("XML")
library(XML)
u = "https://en.wikipedia.org/wiki/List_of_countries_and_dependencies_by_population"
tables = readHTMLTable(u)
names(tables)
u = "https://en.wikipedia.org/wiki/World_population"
tables = readHTMLTable(u)
names(tables)
x = readHTMLTable('http://www.disastercenter.com/crime/iacrime.htm')
x = readHTMLTable('http://www.disastercenter.com/crime/iacrime.htm')
x = readHTMLTable('https://www.disastercenter.com/crime/iacrime.htm')
df <- read.table("http://www.stats.ox.ac.uk/pub/datasets/csb/ch11b.dat",
header = FALSE)
df
readHTMLTable("https://web.stanford.edu/~clint/bench/dw05a.htm")
a<-readHTMLTable("https://web.stanford.edu/~clint/bench/dw05a.htm")
df <- read.table("http://www.stats.ox.ac.uk/pub/datasets/csb/ch11b.dat",
header = TRUE)
df
df <- read.table("http://www.stats.ox.ac.uk/pub/datasets/csb/ch11b.dat",
header = FALSE)
a<-readHTMLTable("https://web.stanford.edu/~clint/bench/dw05a.htm")
df <- read.table("http://www.stats.ox.ac.uk/pub/datasets/csb/ch11b.dat",
header = FALSE)
df
data=read.table(file="http://www.sthda.com/upload/decathlon.txt") #Importation des données
print(data)
head(data)
data<-read.table(file="http://www.sthda.com/upload/decathlon.txt")
head(data)
data<-read.table(file="http://www.sthda.com/upload/decathlon.txt",header = T)
head(data)
data<-read.table(file="http://www.sthda.com/upload/decathlon.txt",header = T, row.names=1)
head(data)
data<-read.table(file="http://www.sthda.com/upload/decathlon.txt",header = T)
head(data)
data<-read.table(file="http://www.sthda.com/upload/decathlon.txt",header = T, row.names = T)
data<-read.table(file="http://www.sthda.com/upload/decathlon.txt",header = T, row.names = 2)
data<-read.table(file="http://www.sthda.com/upload/decathlon.txt",header = T, row.names = 1)
head(data)
data<-read.table(file="http://www.sthda.com/upload/decathlon.txt",header = T, row.names = 1,sep="\t")
head(data)
?read.table()
con<-url('http://www.sthda.com/upload/decathlon.rdata') # Create connexion
load(con) #Load the data
load(con) #Load the data
close(con) #close connexion
print(d) # Print the data
con
con<-url('http://www.sthda.com/upload/decathlon.rdata') # Create connexion
print(d) # Print the data
con<-url('http://www.sthda.com/upload/decathlon.rdata') # Create connexion
load(con) #Load the data
print(d) # Print the data
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
require(knitr)
opts_knit$set(root.dir = "~/Documents/ds_minor/data-wrangling")
df <- read.table("http://www.stats.ox.ac.uk/pub/datasets/csb/ch11b.dat",header = FALSE)
df <- read.table("http://www.stats.ox.ac.uk/pub/datasets/csb/ch11b.dat",header = FALSE)
head(df)
