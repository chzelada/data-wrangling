theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) +geom_bar() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) +geom_curve() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) +geom_path() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) +geom_point +geom_path() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) + geom_point ()
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count)) + geom_point() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count,group=1)) + geom_point() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count,group=1)) + geom_point() + geom_line()
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count,group=1)) + geom_point() + geom_smooth()
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count,group=1)) + geom_point() + geom_abline()
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count,group=1)) + geom_point() + geom_line()
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count,group=1)) + geom_point() + geom_line()
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count,group=1)) + geom_point() +
geom_line() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count,group=1)) + geom_point() +
geom_line() +
theme(axis.title.x=L,
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count,group=1)) + geom_point() +
geom_line() +
theme(axis.title.x="Longtail Arimany",
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
?theme
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count,group=1)) + geom_point() +
geom_line() +
theme(title = "Longtail Arimany",axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count,group=1)) + geom_point() +
geom_line() +
theme(title =element_text("ar"),axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count,group=1)) +
geom_point() +
geom_line() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count,group=1)) +
geom_point() +
geom_density() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count,group=1)) +
geom_point() +
geom_line() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
geom_point() +
geom_line() +
ggtitle("Arimany Longtail") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count,group=1)) + geom_point() +
geom_line() +
ggtitle("Arimany Longtail") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
longtail <- select(message,sent_count) %>% order(desc(sent_count))
longtail <- select(message,sent_count) %>% group_by(message,sent_count)%>% order(desc(sent_count))
longtail <- arimany %>% select(message,sent_count) %>% group_by(message,sent_count)%>% order(desc(sent_count))
longtail <- arimany %>% select(message,sent_count) %>% group_by(message,sent_count)%>% order(desc(sent_count))
longtail <- arimany %>% select(message,sent_count) %>% group_by(message)%>% order(desc(sent_count))
longtail <- arimany %>% select(message,sent_count)%>% order(desc(sent_count))
names(arimany)
longtail <- arimany %>% select(message,sent_count)%>% order(desc(sent_count))
longtail <- arimany%>% order(desc(sent_count))
longtail <- arimany %>% order(desc(sent_count))
longtail <- arimany %>% order(desc(sent_count))
longtail <- arimany %>% order(desc(arimany$sent_count))
str(arimany$sent_count)
longtail <- arimany %>% select(sent_count) %>% order(desc(arimany$sent_count))
longtail <- as.data.frame(longtail)
arimany
arimany <- as.data.frame(arimany)
longtail <- arimany %>% select(sent_count) %>% order(desc(arimany$sent_count))
longtail
longtail <- arimany %>% select(sent_count) %>% order(asc(arimany$sent_count))
longtail <- arimany %>% select(sent_count) %>% order(desc(arimany$sent_count))
names(arimany)
longtail
str(arimany$sent_count)
longtail <- arimany %>% select(sent_count) %>% mutate(pct =sent_count/sum(sent_count))%>% order(desc(arimany$sent_count))
longtail <- arimany %>% select(message,sent_count) %>% group_by(message) %>% mutate(pct =sent_count/sum(sent_count))%>% order(desc(arimany$sent_count))
longtail <- arimany %>% select(message,sent_count) %>%
group_by(message) %>% mutate(pct =sent_count/sum(sent_count))%>% order(desc(arimany$sent_count))
longtail <- arimany %>%
select(message,sent_count) %>%
group_by(message) %>%
summarise(n=sum(sent_count)) %>%
mutate(pct=n/sum(n)) %>%
arrange(desc(n)) %>%
distinct()
longtail
longtail$pct %>%sum()
longtail %>% View()
longtail$n %>%sum()
arimany$sent_count %>%sum()
ggplot(data = arimany, aes(x=reorder(message,-sent_count),y=sent_count,group=1)) + geom_point() +
geom_line() +
geom_vline(xintercept = 5) +
ggtitle("Arimany Longtail") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
str(df)
library(lubridate)
library(dplyr)
mes<- df %>% mutate(month_name = month(created_on, label = TRUE))
library(dplyr)
library(dplyr)
mes<- df %>% mutate(month_name = month(created_on, label = TRUE))
library("dplyr", lib.loc="~/R/win-library/3.4")
library(dplyr)
library(lubridate)
library(dplyr)
library("dplyr", lib.loc="~/R/win-library/3.4")
install.packages(dplyr)
install.packages("dplyr")
install.packages("dplyr")
df <- read_csv("C:/Users/jctep/Desktop/Enero2018.csv",
col_names = FALSE, col_types = cols(`30000210` = col_number(),
X10 = col_number()))
###importar archivo csv
library(readr)
require(dplyr)
df <- read_csv("C:/Users/jctep/Desktop/Enero2018.csv",
col_names = FALSE, col_types = cols(`30000210` = col_number(),
X10 = col_number()))
###importar archivo csv
library(readr)
###importar archivo csv
library(readr)
###importar archivo csv
library(readr)
###importar archivo csv
library(readr)
require(dplyr)
###importar archivo csv
install.packages("readr")
library(readr)
library(readr)
df <- read_csv("C:/Users/jctep/Desktop/Enero2018.csv",
col_names = FALSE, col_types = cols(`30000210` = col_number(),
X10 = col_number()))
library(readr)
require(dplyr)
library(ggplot2)
library(readr)
library(Rcpp)
install.packages("Rcpp")
library(readr)
###importar archivo csv
install.packages("readr")
library(readr)
require(dplyr)
install.packages("dplyr")
require(dplyr)
library(lubridate)
df$mes <-mutate(month_name = month(created_on, label = TRUE))
df$mes <-mutate(month_name = month(df$created_on, label = TRUE))
df$mes
df$mes <-mutate(month_name = month(df$created_on, label = TRUE))
?month
df$dia<- mutate(day_name = day(df$created_on, label = TRUE))
df$mes <- month(df$created_on, label=TRUE)
df$dia <- day(df$created_on, label=TRUE)
df$dia <- day(df$created_on)
df$dia
head(g)
g<- df  %>%
select(dia,sent_count,) %>%
group_by(dia) %>%
summarise(n=sum(sent_count)) %>%
mutate(pct=n/sum(n)) %>%
arrange(desc(n)) %>%
distinct()
View(g)
df$hora<- mutate(day_name = hour(df$created_on, label = TRUE))
df$hora<- mutate(day_name = hour(df$created_on))
horas <- df  %>%
select(hora,sent_count,) %>%
group_by(hora) %>%
summarise(n=sum(sent_count)) %>%
mutate(pct=n/sum(n)) %>%
arrange(desc(n)) %>%
distinct()
df$hora<- mutate(day_name = hour(df$created_on))
df$hora <- hour(df$created_on)
head(df$hora)
horas <- df  %>%
select(hora,sent_count,) %>%
group_by(hora) %>%
summarise(n=sum(sent_count)) %>%
mutate(pct=n/sum(n)) %>%
arrange(desc(n)) %>%
distinct()
View(horas)
library("RMySQL")
setwd("~/GitHub/data-wrangling/week3")
files <- list.files(path="football-world-cup-2018-dataset/")
source('~/GitHub/data-wrangling/week3/Lecture_3_dplyr.R')
players
players_score
players_stats
head(players_score)
######filter()
players_score %>% filter(club == "Real Madrid")
######filter()
players_score %>%
filter(club == "Real Madrid") %>%
arrange(AerialsWon)
######filter()
players_score %>%
filter(club == "Real Madrid") %>%
arrange(AerialsWon) %>% desc()
######filter()
players_score %>%
filter(club == "Real Madrid") %>%
arrange(AerialsWon) %>% desc()
######filter()
players_score %>%
filter(club == "Real Madrid") %>%
arrange(desc(AerialsWon))
source('~/GitHub/data-wrangling/week3/Lecture_3_dplyr.R', echo=TRUE)
######filter()
players_score %>%
filter(club == "Liverpool") %>%
arrange(desc(AerialsWon))
source('~/GitHub/data-wrangling/week3/Lecture_3_dplyr.R', echo=TRUE)
######filter()
players_score %>%
filter(club == "Real Madrid") %>%
arrange(desc(AerialsWon))
players_score
######filter()
players_score %>%
filter(club == "Real Madrid") %>%
arrange(desc(Goals))
######filter()
players_score %>%
#filter(club == "Real Madrid") %>%
arrange(desc(Goals))
players_score %>%
mutate(Goal_Rate = Goals/Mins) %>%
arrange(desc(Goal_Rate))
players_score %>%
mutate(Goal_Rate = Mins/Goals) %>%
arrange(desc(Goal_Rate))
players_score %>%
filter(Goals >= 0) %>%
mutate(Goal_Rate = Mins/Goals) %>%
arrange(desc(Goal_Rate))
players_score %>%
filter(Goals > 0) %>%
mutate(Goal_Rate = Mins/Goals) %>%
arrange(desc(Goal_Rate))
players_score %>%
mutate(Goal_Rate = Mins/Goals) %>%
arrange(asc(Goal_Rate))
players_score %>%
mutate(Goal_Rate = Mins/Goals) %>%
arrange(Goal_Rate)
players_score %>%
filter(Goals > 0) %>%
mutate(Goal_Rate = Mins/Goals) %>%
arrange(Goal_Rate)
players_score %>%
filter(Goals > 0) %>%
mutate(Goal_Rate = Mins/Goals) %>%
arrange(Goal_Rate) %>% distinct()
players_score %>%
arrange(MotM)
players_score %>%
arrange(desc(MotM))
players_stats
players_stats %>%
arrange(desc(perfdef))
players_stats %>%
arrange(desc(perfattack))
setwd("~/GitHub/data-wrangling/week1")
setwd("~/GitHub/data-wrangling/week1")
setwd("~/GitHub/data-wrangling/week1")
setwd("~/GitHub/data-wrangling/week1")
require(knitr)
opts_knit$set(root.dir = "~/Documents/ds_minor/data-wrangling")
text_file <- '../data/quijote.txt'
readLines(text_file,n=10,skipNul = TRUE)
##Cambiar el encoding para que lea los caracteres en español.
readLines(text_file,n=10,skipNul = TRUE, encoding = "UTF-8")
readLines(text_file,n=10,skipNul = TRUE, encoding = "UTF-8")
str(quijote)
?unnest_token
library(tidytext)
library(tidyverse)
quijote_frame<-data_frame(txt=quijote_lines)
require(knitr)
#opts_knit$set(root.dir = "~/Documents/ds_minor/data-wrangling")
text_file <- '../data/quijote.txt'
readLines(text_file,n=10,skipNul = TRUE)
##Cambiar el encoding para que lea los caracteres en español.
readLines(text_file,n=10,skipNul = TRUE, encoding = "UTF-8")
readLines(text_file,n=10,skipNul = TRUE, encoding = "UTF-8")
library(readr)
quijote_lines <- read_lines(text_file)
str(quijote_lines)
quijote_lines[1:10]
system.time(readLines(text_file))
system.time(read_lines(text_file))
quijote_file <- read_file(text_file)
str(quijote_file)
##Cuanto tiempo se tarda en leer todo el documento esta funcion?
substr(quijote_file,0,150)
read_lines(text_file,skip = 10,n_max = 20)
read_lines(text_file,skip = 10,n_max = 20)
library(tidytext)
library(tidyverse)
quijote_frame<-data_frame(txt=quijote_lines)
quijote_frame
quijote_words <- unnest_tokens(quijote_frame,output = word,input = txt, token = "words" )
quijote_sentences <- unnest_tokens(quijote_frame,output = word,input = txt, token = "sentences" )
quijote_count<-count(quijote_words,word, sort = TRUE)
hour<-read_csv("../data/hour.csv")
hour_2<-read.csv("../data/hour.csv")
system.time(read_csv("../data/hour.csv"))
system.time(read.csv("../data/hour.csv"))
head(hour)
quijote_words <- unnest_tokens(quijote_frame,output = word,input = txt, token = "words" )
quijote_words
quijote_count<-count(quijote_words,word, sort = TRUE)
quijote_count
quijote_words_clean <- quijote_frame %>%
unnest_tokens(output =word, input = txt, token="words") %>%
anti_join(spanish_stopwords) %>%
count(word, sort=TRUE)
library(quanteda)
spanish_stopwords<-data_frame(word=quanteda::stopwords(language = "es"))
spanish_stopwords
quijote_words_clean <- quijote_frame %>%
unnest_tokens(output =word, input = txt, token="words") %>%
anti_join(spanish_stopwords) %>%
count(word, sort=TRUE)
quijote_words_clean
?read_csv
hour<-read_csv("../data/hour.csv",delim=,)
hour<-read_csv("../data/hour.csv",delim=",")
?read_delim()
read_deim("../data/hour.csv")
read_delim("../data/hour.csv")
read_delim("../data/hour.csv",delim = ",")
read_delim("../data/hour.csv",delim = ";")
bancos_activos <- read_excel("../data/bancos.xlsx", #sheet = "sheet1"
col_types = "text")
library(readxl)
bancos_activos <- read_excel("../data/bancos.xlsx", #sheet = "sheet1"
col_types = "text")
bancos_activos
bancos_activos <- read_excel("../data/bancos.xlsx", #sheet = "sheet1"
col_types = "text")
bancos_activos
read_excel()
?read_excel()
bancos_activos <- read_excel("../data/bancos.xlsx", #sheet = "sheet1")
bancos_activos <- read_excel("../data/bancos.xlsx", #sheet = "sheet1"))
bancos_activos <- read_excel("../data/bancos.xlsx", #sheet = "sheet1"))
bancos_activos <- read_excel("../data/bancos.xlsx")
bancos_activos <- read_excel("../data/bancos.xlsx")
bancos_activos
bancos_agencias <- read_excel("../data/bancos.xlsx",sheet = "agencias")
bancos_agencias
bancos_agencias <- read_excel("../data/bancos.xlsx",sheet = 2)
bancos_agencias
system.time(readLines(text_file))
readLines()
require(knitr)
#opts_knit$set(root.dir = "~/Documents/ds_minor/data-wrangling")
text_file <- '../data/quijote.txt'
readLines(text_file,n=10,skipNul = TRUE)
##Cambiar el encoding para que lea los caracteres en español.
readLines(text_file,n=10,skipNul = TRUE, encoding = "UTF-8")
readLines(text_file,n=10,skipNul = TRUE, encoding = "UTF-8")
library(readr)
quijote_lines <- read_lines(text_file)
str(quijote_lines)
quijote_lines[1:10]
system.time(readLines(text_file))
system.time(read_lines(text_file))
quijote_file <- read_file(text_file)
str(quijote_file)
##Cuanto tiempo se tarda en leer todo el documento esta funcion?
substr(quijote_file,0,150)
read_lines(text_file,skip = 10,n_max = 20)
read_lines(text_file,skip = 10,n_max = 20)
library(tidytext)
library(tidyverse)
quijote_frame<-data_frame(txt=quijote_lines)
quijote_frame
quijote_words <- unnest_tokens(quijote_frame,output = word,input = txt, token = "words" )
quijote_sentences <- unnest_tokens(quijote_frame,output = word,input = txt, token = "sentences" )
quijote_count<-count(quijote_words,word, sort = TRUE)
library(quanteda)
spanish_stopwords<-data_frame(word=quanteda::stopwords(language = "es"))
spanish_stopwords
quijote_words_clean <- quijote_frame %>%
unnest_tokens(output =word, input = txt, token="words") %>%
anti_join(spanish_stopwords) %>%
count(word, sort=TRUE)
quijote_words_clean
# https://rpubs.com/jboscomendoza/analisis_sentimientos_lexico_afinn
hour<-read_csv("../data/hour.csv")
hour_2<-read.csv("../data/hour.csv")
system.time(read_csv("../data/hour.csv"))
system.time(read.csv("../data/hour.csv"))
read_delim("../data/hour.csv",delim = ";")
head(hour)
library(readxl)
bancos_activos <- read_excel("../data/bancos.xlsx")
bancos_agencias <- read_excel("../data/bancos.xlsx",sheet = "agencias")
unlink('Lecture_1_cache', recursive = TRUE)
library(ggplot2)
players_score<-read_csv(file ="football-world-cup-2018-dataset/Players_Score.csv")
numbers<-c("age","Goals","Assists","Yel","Red","SpG","PS","AerialsWon","MotM","Rating")
players_score[numbers] <- lapply(players_score[numbers],as.numeric)
head(players_score)
setwd("~/GitHub/data-wrangling/week3")
fixture<-read_csv(file ="football-world-cup-2018-dataset/Fixture.csv" )
players<-read_csv(file ="football-world-cup-2018-dataset/Players.csv")
players_score<-read_csv(file ="football-world-cup-2018-dataset/Players_Score.csv")
players_stats<-read_csv(file ="football-world-cup-2018-dataset/Players_Stats.csv")
teams<-read_csv(file ="football-world-cup-2018-dataset/Teams.csv")
####players_score necesita que al importar se cambien todas las variables
head(players_score)
numbers<-c("age","Goals","Assists","Yel","Red","SpG","PS","AerialsWon","MotM","Rating")
###reemplazar guiones con 0
players_score[numbers] %>% str()
players_score[numbers] <- lapply(players_score[numbers],as.numeric)
head(players_score)
##puntos extra al que encuentre una manera mas eficiente de hacer esto.
players_score[numbers]<-players_score[numbers] %>%
replace_na(list(age=0,Goals=0,Assists=0,Yel=0,Red=0,SpG=0,PS=0,AerialsWon=0,MotM=0,Rating=0))
ggplot(players_score, aes(x=SpG,y=Goals)) + geom_point()
ggplot(players_score, aes(x=Goals,y=MotM)) + geom_point()
players_score <-players_score %>%
filter(Goals > 0) %>%
mutate(Goal_Rate = Mins/Goals) %>%
arrange(Goal_Rate) %>%
distinct()
ggplot(players_score, aes(x=Goal_Rate,y=MotM)) + geom_point()
ggplot(players_score, aes(x=Goal_Rate,y=MotM)) + geom_jitter()
ggplot(players_score, aes(x=age,y=Goals)) + geom_jitter()
ggplot(players_score, aes(x=age,y=Goals)) + geom_density()
ggplot(players_score, aes(x=age,y=Goals)) + geom_histogram()
ggplot(players_score, aes(x=age)) + geom_histogram()
ggplot(players_score, aes(x=age)) + geom_histogram(bins = 30)
ggplot(players_score, aes(x=age)) + geom_histogram(bins = 60)
ggplot(players_score, aes(x=age)) + geom_histogram(bins = 25)
ggplot(players_score, aes(x=age,y=Goals)) + geom_point()
ggplot(players_score, aes(x=Assists,y=Goals)) + geom_point()
ggplot(players_score, aes(x=Goals,y=Rating)) + geom_point()
ggplot(players_score, aes(x=Goals,y=Rating)) + geom_jitter()
ggplot(players_score, aes(x=age,y=Goals)) + geom_point()
ggplot(players_score, aes(x=Goals,y=Rating)) + geom_jitter()
ggplot(players_score, aes(x=age,y=Goals)) + geom_point()
ggplot(players_score, aes(x=Goals,y=Rating)) + geom_jitter()
ggplot(players_score, aes(x=Goals,y=Rating)) + geom_jitter()
ggplot(players_score, aes(x=Goal_Rate,y=MotM)) + geom_point()
ggplot(players_score, aes(x=Goal_Rate,y=MotM)) + geom_point()
ggplot(players_score, aes(x=Goal_Rate,y=MotM)) + geom_jitter()
ggplot(players_score, aes(x=Goal_Rate,y=MotM)) + geom_jitter() + scale_x_log10()
ggplot(players_score, aes(x=Goal_Rate,y=MotM)) + geom_jitter() + scale_y_log10()
ggplot(players_score, aes(x=Goal_Rate,y=MotM)) + geom_jitter()
ggtitle()
